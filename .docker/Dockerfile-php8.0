ARG PHP_VERSION=5.6
FROM php:${PHP_VERSION}

# install the PHP extensions we need (https://make.wordpress.org/hosting/handbook/handbook/server-environment/#php-extensions)
RUN set -ex; \
	\
	savedAptMark="$(apt-mark showmanual)"; \
	\
	apt-get update; \
	apt-get install -y --no-install-recommends \
	    git \
	    subversion \
		libfreetype6-dev \
		libjpeg-dev \
		libmagickwand-dev \
		libpng-dev \
		libzip-dev \
		unzip \
	; \
	\
	docker-php-ext-configure gd; \
	docker-php-ext-install \
		bcmath \
		exif \
		gd \
		mysqli  \
		zip \
	; \
	\
# reset apt-mark's "manual" list so that "purge --auto-remove" will remove all build dependencies
	apt-mark auto '.*' > /dev/null; \
	apt-mark manual $savedAptMark; \
	apt-mark hold git subversion unzip ; \
	ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so \
		| awk '/=>/ { print $3 }' \
		| sort -u \
		| xargs -r dpkg-query -S \
		| cut -d: -f1 \
		| sort -u \
		| xargs -rt apt-mark manual; \
	\
	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
	rm -rf /var/lib/apt/lists/*

RUN set -ex; \
	\
	savedAptMark="$(apt-mark showmanual)"; \
	\
	apt-get update; \
	apt-get install -y --no-install-recommends \
	    libmagick++-dev \
	; \
	\
# reset apt-mark's "manual" list so that "purge --auto-remove" will remove all build dependencies
	apt-mark auto '.*' > /dev/null; \
	apt-mark manual $savedAptMark; \
	apt-mark hold libmagick++-dev ; \
	\
	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
	rm -rf /var/lib/apt/lists/*

WORKDIR /tmp

RUN curl -LO https://github.com/Imagick/imagick/archive/master.zip ; \
		unzip -d . master.zip ; \
		rm master.zip ; \
		cd imagick-master ; \
		phpize && ./configure ; \
		make && make install ; \
		docker-php-ext-enable imagick ; \
		cd .. && rm -fr imagick-master

COPY install-composer.sh .
RUN /tmp/install-composer.sh

ARG GITHUB_TOKEN
RUN composer config -g github-oauth.github.com ${GITHUB_TOKEN} && \
	composer global config minimum-stability dev && \
	composer global config prefer-stable true && \
	composer config -g repositories.github-phpunit-woocommerce vcs https://github.com/woocommerce/phpunit && \
	composer global require phpunit/phpunit:dev-add-compatibility-with-php8-to-phpunit-7 --ignore-platform-reqs && \
	composer config -g github-oauth.github.com --unset && \
	ln -s /root/.composer/vendor/bin/phpunit /usr/local/bin/phpunit

ARG WORDPRESS_VERSION=latest
COPY install-wp-tests.sh .
RUN /tmp/install-wp-tests.sh wordpress wordpress password db ${WORDPRESS_VERSION} true

VOLUME ["/app"]
WORKDIR /app

ENTRYPOINT ["/usr/local/bin/phpunit"]
CMD ["--help"]
